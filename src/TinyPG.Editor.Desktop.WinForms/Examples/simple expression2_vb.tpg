//@TinyPG - a Tiny Parser Generator v1.2
//Copyright Â© Herre Kuijpers 2008-2010
//Simple expression calculator

// Generate VB code
<% @TinyPG Language="VB" %>

// include text highlighting as part of the input window
<% @TextHighlighter Generate="true" %>

			EOF         -> @"^\s*$";
[Color(255, 0, 0)] 	NUMBER 	-> @"[0-9]+";
[Color(0, 0, 255)] 	PLUSMINUS 	-> @"(\+|-)";
[Color(0, 0, 255)] 	MULTDIV 	-> @"\*|/";
[Color(0, 0, 255)] 	BROPEN 	->  @"\(";
[Color(0, 0, 255)] 	BRCLOSE 	->  @"\)";

[Skip] 		WHITESPACE  -> @"\s+";

Start -> (AddExpr)? EOF
{ Return $AddExpr };      


AddExpr -> MultExpr (PLUSMINUS MultExpr)*
{ 

	Dim Value As Integer = Convert.ToInt32($MultExpr)
	Dim i As Integer = 1
	While $MultExpr[i] IsNot Nothing
		Dim sign As String = $PLUSMINUS[i-1].ToString()
		If sign = "+" Then
			Value += Convert.ToInt32($MultExpr[i])
		Else 
			Value -= Convert.ToInt32($MultExpr[i])
		End If
		i=i+1
	End While
	Return Value
};

MultExpr -> Atom (MULTDIV Atom)*
{
	Dim Value As Integer = Convert.ToInt32($Atom)
	Dim i As Integer = 1
	While $Atom[i] IsNot Nothing
		Dim sign As String = $MULTDIV[i-1].ToString()
		If sign = "*" Then
			Value *= Convert.ToInt32($Atom[i])
		Else 
			Value /= Convert.ToInt32($Atom[i])
		End If
		i=i+1
	End While

	Return Value
};

Atom -> NUMBER |  BROPEN AddExpr BRCLOSE
{
	If $NUMBER IsNot Nothing Then
		Return $NUMBER
	Else 
		Return $AddExpr
	End If
};
